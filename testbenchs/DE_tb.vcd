$date
	Mon May 20 18:04:15 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module DE_tb $end
$var wire 32 ! ru2 [31:0] $end
$var wire 32 " ru1 [31:0] $end
$var wire 1 # RuWr $end
$var wire 2 $ RUDataWrSrc [1:0] $end
$var wire 32 % ImmExt [31:0] $end
$var wire 1 & DMWr $end
$var wire 3 ' DMCtrl [2:0] $end
$var wire 5 ( BrOp [4:0] $end
$var wire 4 ) AluOp [3:0] $end
$var wire 1 * AluBSrc $end
$var wire 1 + AluASrc $end
$var reg 1 , clk $end
$var reg 32 - inst_de [31:0] $end
$var reg 32 . muxData [31:0] $end
$scope module uut $end
$var wire 1 , clk $end
$var wire 32 / inst_de [31:0] $end
$var wire 32 0 muxData [31:0] $end
$var wire 32 1 ru2 [31:0] $end
$var wire 32 2 ru1 [31:0] $end
$var wire 1 # RuWr $end
$var wire 2 3 RUDataWrSrc [1:0] $end
$var wire 3 4 ImmSrc [2:0] $end
$var wire 32 5 ImmExt [31:0] $end
$var wire 1 & DMWr $end
$var wire 3 6 DMCtrl [2:0] $end
$var wire 5 7 BrOp [4:0] $end
$var wire 4 8 AluOp [3:0] $end
$var wire 1 * AluBSrc $end
$var wire 1 + AluASrc $end
$scope module cu $end
$var wire 3 9 funct3 [2:0] $end
$var wire 7 : funct7 [6:0] $end
$var wire 7 ; opcode [6:0] $end
$var parameter 7 < AUIPC $end
$var parameter 7 = B $end
$var parameter 7 > I $end
$var parameter 7 ? J $end
$var parameter 7 @ JR $end
$var parameter 7 A L $end
$var parameter 7 B LUI $end
$var parameter 7 C R $end
$var parameter 7 D S $end
$var reg 4 E ALUOp [3:0] $end
$var reg 1 + AluASrc $end
$var reg 1 * AluBSrc $end
$var reg 5 F BrOp [4:0] $end
$var reg 3 G DMCtrl [2:0] $end
$var reg 1 & DMWr $end
$var reg 3 H ImmSrc [2:0] $end
$var reg 2 I RUDataWrSrc [1:0] $end
$var reg 1 # RuWr $end
$upscope $end
$scope module imm $end
$var wire 3 J ImmScr [2:0] $end
$var wire 25 K Inst [24:0] $end
$var reg 32 L ImmExt [31:0] $end
$upscope $end
$scope module ru $end
$var wire 32 M RuDataWrite [31:0] $end
$var wire 1 # Ruwr $end
$var wire 1 , clk $end
$var wire 5 N rd [4:0] $end
$var wire 5 O rs1 [4:0] $end
$var wire 5 P rs2 [4:0] $end
$var reg 32 Q Ru1 [31:0] $end
$var reg 32 R Ru2 [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 S i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100011 D
b110011 C
b110111 B
b11 A
b1100111 @
b1101111 ?
b10011 >
b1100011 =
b10111 <
$end
#0
$dumpvars
b100000 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
0,
0+
0*
b0 )
b0 (
b0 '
0&
b0 %
b0 $
1#
b0 "
b0 !
$end
#15000
1,
#30000
b101 %
b101 5
b101 L
1*
b1000 N
b1000 O
b101 P
b1010100000001000 K
b10011 ;
0,
b101 .
b101 0
b101 M
b10101000000010000010011 -
b10101000000010000010011 /
#45000
b101 "
b101 2
b101 Q
1,
#60000
b101 !
b101 1
b101 R
b0 "
b0 2
b0 Q
b1000 %
b1000 5
b1000 L
0*
b1001 N
b10010 O
b1000 P
b10001001000001001 K
b110011 ;
0,
b10000111011001010100001100100001 .
b10000111011001010100001100100001 0
b10000111011001010100001100100001 M
b100010010000010010110011 -
b100010010000010010110011 /
#75000
1,
#90000
b0 !
b0 1
b0 R
b10011 %
b10011 5
b10011 L
b10011 N
b10011 P
b100111001000010011 K
0,
b1111000011110000111100001111 .
b1111000011110000111100001111 0
b1111000011110000111100001111 M
b1001110010000100110110011 -
b1001110010000100110110011 /
#105000
b1111000011110000111100001111 !
b1111000011110000111100001111 1
b1111000011110000111100001111 R
1,
#120000
0,
